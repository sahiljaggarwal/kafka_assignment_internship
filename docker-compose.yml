# version: "3.8"

# services:
#   kafka:
#     image: "confluentinc/cp-kafka:latest"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#     depends_on:
#       - zookeeper

#   zookeeper:
#     image: "confluentinc/cp-zookeeper:latest"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000

#   postgres:
#     image: "postgres:latest"
#     environment:
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_DB: mydatabase
#     ports:
#       - "5432:5432"

#   kafka-connect:
#     image: "confluentinc/cp-kafka-connect:latest"
#     environment:
#       CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
#       CONNECT_REST_PORT: 8083
#       CONNECT_GROUP_ID: "kafka-connect-group"
#       CONNECT_CONFIG_STORAGE_TOPIC: "__kafka_connect_configs"
#       CONNECT_OFFSET_STORAGE_TOPIC: "__kafka_connect_offsets"
#       CONNECT_STATUS_STORAGE_TOPIC: "__kafka_connect_status"
#       CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
#       CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
#       CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
#       CONNECT_WAIT_FOR_KAFKA: "true" # This is a custom env variable to indicate waiting for Kafka to be up
#     ports:
#       - "8083:8083"
#     depends_on:
#       - kafka
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:8083/"]
#       interval: 10s
#       retries: 10
#       start_period: 10s
#       timeout: 5s

## Second File
# version: "3.8"

# services:
#   zookeeper:
#     image: "confluentinc/cp-zookeeper:latest"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000
#     ports:
#       - "2181:2181"

#   kafka:
#     image: "confluentinc/cp-kafka:latest"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # Avoid replication errors with 1 broker
#     depends_on:
#       - zookeeper
#     ports:
#       - "9092:9092"

#   postgres:
#     image: "postgres:latest"
#     environment:
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_DB: mydatabase
#     ports:
#       - "5432:5432"

#   kafka-connect:
#     image: "confluentinc/cp-kafka-connect:latest"
#     environment:
#       CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
#       CONNECT_REST_PORT: 8083
#       CONNECT_GROUP_ID: "kafka-connect-group"
#       CONNECT_CONFIG_STORAGE_TOPIC: "__kafka_connect_configs"
#       CONNECT_OFFSET_STORAGE_TOPIC: "__kafka_connect_offsets"
#       CONNECT_STATUS_STORAGE_TOPIC: "__kafka_connect_status"
#       CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
#       CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
#       CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
#       CONNECT_WAIT_FOR_KAFKA: "true"
#       CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
#       CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
#       CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
#     depends_on:
#       - kafka
#     ports:
#       - "8083:8083"
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:8083/"]
#       interval: 10s
#       retries: 10
#       start_period: 10s
#       timeout: 5s

# third file
version: "3.8"
services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: "confluentinc/cp-kafka:latest"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  postgres:
    image: "postgres:latest"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"

  kafka-connect:
    build:
      context: .
      dockerfile: Dockerfile # Yeh line ensure karein
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "kafka-connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "__kafka_connect_configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "__kafka_connect_offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "__kafka_connect_status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
      CONNECT_WAIT_FOR_KAFKA: "true"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/local/share/kafka-connect"
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 5s
